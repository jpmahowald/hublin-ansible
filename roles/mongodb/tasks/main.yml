---
- include: "{{ansible_distribution}}.yml"
  tags: mongo

- name: Upload SSL certificate
  when: False
  copy: >
    src=../../../certs/{{ item }}
    dest=/etc/ssl/{{ item }}
    mode=0644
  with_items:
    - "{{ certfile }}"
    - "{{ keyfile }}"
  notify:
    - Restart mongodb service
  tags: mongo

- name: Allow mongodb to read certificates 
  tags: mongo
  file:
    path: "/etc/letsencrypt/{{ item }}/"
    state: directory
    owner: mongodb
    group: mongodb
  with_items:
    - archive
    - live
  notify:
    - Restart mongodb service

- name: Provide mongodb configuration file
  template: >
    src=mongodb.conf
    dest=/etc/mongodb.conf
    mode=0644
  notify:
    - Restart mongodb service
  tags: mongo

- name: Flush handlers
  meta: flush_handlers
  tags: mongo

- name: Create mongodb admin user
  command: >
    mongo admin --ssl --eval "printjson(db.addUser({ user: '{{ mongodb_admin_user }}', pwd: '{{ mongodb_admin_password }}', roles: ['userAdminAnyDatabase'] }))"
  failed_when: false
  tags: mongo

- name: Create mongodb hublin user
  command: >
    mongo admin -u {{ mongodb_admin_user }} -p {{ mongodb_admin_password }} --ssl --eval "db.getSiblingDB( '{{ mongodb_database }}' ).addUser({user: '{{ mongodb_user }}', pwd: '{{ mongodb_password }}', roles: ['readWrite','dbAdmin']})"
  failed_when: false
  tags: mongo

- name: Insert redis configuration
  command: >
    mongo hublin -u {{ mongodb_user }} -p {{ mongodb_password }} --ssl --eval "db.configuration.insert({'_id': 'redis', 'host': '{{ redis_host }}', 'port': '{{ redis_port }}', 'client_options': {'auth_pass': '{{ redis_password }}'}})"
  failed_when: false
  tags: mongo
